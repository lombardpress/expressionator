{"version":3,"sources":["actions/action-types.js","reducers/edfInfo.js","reducers/edfListInfo.js","reducers/personsInfo.js","reducers/personInfo.js","utils.js","reducers/witnessInfo.js","reducers/witnessesInfo.js","reducers/view.js","reducers/manifests.js","reducers/index.js","actions/index.js","store.js","components/NavBar.js","exportToXml.js","exportToCdf.js","components/PersonsListItem.js","components/PersonsListViewer.js","components/WitnessesListItem.js","components/WitnessesListViewer.js","components/EdfListItem.js","components/EdfListViewer.js","components/WitnessView.js","components/WitnessCreation.js","components/WitnessesView.js","components/PersonViewer.js","components/EdfViewer.js","components/Item.js","components/ItemCreation.js","components/ItemsViewer.js","components/Canvas.js","components/Manifest.js","components/App.js","serviceWorker.js","index.js"],"names":["ActionTypes","_ActionTypes","ASSIGN_EDF","ATTACH_WITNESS","REQUEST_PERSONS","RECEIVE_PERSONS","RECEIVE_PERSONS_FAILURE","ASSIGN_PERSON","CLEAR_PERSON_INFO","CREATE_PERSON","UPDATE_PERSON","REQUEST_WITNESSES","RECEIVE_WITNESSES","RECEIVE_WITNESSES_FAILURE","CHANGE_DATA_CREATION_VIEW","CHANGE_FOCUSED_WITNESS","UPDATE_WITNESS","CREATE_WITNESS","Object","defineProperty","edfReducer","state","arguments","length","undefined","action","type","id","title","description","items","UPDATE_EDF","CLEAR_EDF_INFO","edfListReducer","REQUEST_EDFS","RECEIVE_EDFS","edfList","map","item","expressionShortId","value","expressionTitle","authorId","authorShortId","status","REQUEST_EDF_ITEMS","RECEIVE_EDF_ITEMS","organizedItems","edfItems","itemShortId","itemTitle","questionTitle","edf","objectSpread","UPDATE_ITEM","copyState1","slice","find","edfId","proposedChange","toConsumableArray","CREATE_ITEM","copyState2","edf2","newItem","push","REQUEST_EDF_MANIFESTATIONS","RECEIVE_EDF_MANIFESTATIONS","organizedManifestations","edfManifestations","m","witnessShortId","manifestations","CREATE_EDF","authorTitle","ASSOCIATE_SURFACE","copyState3","item3","i","itemId","surfaces","surfaceId","witnessId","RECEIVE_EDFS_FAILURE","personsReducer","personsList","personShortId","personTitle","personList","person","personReducer","makeid","text","possible","charAt","Math","floor","random","witnessReducer","currentWitnesses","wit","info","UN_ATTACH_WITNESS","filter","CLEAR_ASSIGNED_EDF_MANIFESTATIONS","witness","witnessesReducer","RECEIVE_WITNESSES2","witnessesList","splitArray","split","witnessTitle","manifest","viewReducer","assign","dataCreationView","focusedWitness","CHANGE_FOCUSED_ITEM","focusedItem","SELECT_CANVAS","canvasid","manifestsReducer","REQUEST_MANIFEST","RECEIVE_MANIFEST","manifestid","manifestdata","RECEIVE_MANIFEST_FAILURE","rootReducer","combineReducers","edfInfo","edfListInfo","personsInfo","personInfo","witnessInfo","witnessesInfo","view","manifests","requestPersons","receivePersons","receivePersonsFailure","error","fetchPersons","query","join","dispatch","Axios","get","params","output","then","res","data","results","bindings","catch","requestWitnesses","receiveWitnesses","receiveWitnessesFailure","fetchWitnesses","requestManifest","receiveManifest","receiveManifestFailure","fetchManifest","requestEdfList","receiveEdfList","receiveEdfListFailure","fetchEdfList","requestEdfItems","receiveEdfItems","receiveEdfItemsFailure","RECEIVE_EDFS_ITEMS_FAILURE","fetchEdfItems","requestEdfManifestations","receiveEdfManifestations","receiveEdfManifestationsFailure","RECEIVE_EDFS_MANIFESTATIONS_FAILURE","fetchEdfManifestations","forEach","attachWitness","assignManifestations","clearAssignedEdfManifestations","changeDataCreationView","createAndAttachWitness","createWitness","unAttachWitness","updateWitness","changeFocusedWitness","createAndAssignEdf","createEdf","assignEdf","updateEdf","clearEdfInfo","createAndAssignPerson","createPerson","assignPerson","updatePerson","clearPersonInfo","updateItem","createItem","changeFocusedItem","associateSurface","selectCanvas","loggerMiddleware","createLogger","persistedState","JSON","parse","localStorage","getItem","e","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","actions","ActionCreators","NavBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDownloadOnclick","bind","assertThisInitialized","handleDownloadCdfs","witnesses","witTitle","targetWit","edfWit","replace","targetEdf","witnessesSurfaces","surfaceWitness","s","Set","w","p","edfTitle","exportToXml","fileDownload","window","location","href","encodeURI","exportToCdf","react_default","a","createElement","className","onClick","Component","connect","PersonsListItem","handlePersonSelect","_this2","ref","key","displayProposedChange","PersonsListViewer","handleOnChangeSearchText","searchText","preventDefault","target","setState","inputGroup","disabled","large","leftIcon","onChange","placeholder","small","author","includes","components_PersonsListItem","name","WitnessesListItem","handleWitnessSelect","witnessStatus","WitnessesListViewer","components_WitnessesListItem","EdfListItem","handleEdfSelect","edfObject","_this3","edfStatus","EdfListViewer","toLowerCase","components_EdfListItem","WitnessView","handleToggleEdit","handleRemoveWitness","handleFocusWitness","editMode","refs","textContent","manifestId","contentEditable","buttons","active","WitnessCreation","handleAddNewWitness","form","onSubmit","formGroup","label","labelFor","WitnessesView","components_WitnessView","components_WitnessCreation","PersonViewer","handleAssignNewPerson","EdfViewer","handleCreateNewEdf","Item","alert","displaySurfaces","ItemCreation","handleAddNewItem","ItemsViewer","questionTitles","console","log","components_Item","displayItems","components_ItemCreation","Canvas","handleOnMouseOver","handleOnMouseOut","handleItemAssociation","handleNext","handlePrevoius","handlePrevious","width","canvas","canvasNext","canvasPrevious","onMouseOver","onMouseOut","src","images","resource","service","Manifest","sequences","canvases","canvasIndex","findIndex","index","components_Canvas","displayCanvases","focusedWitnessId","_unused","getFocusedWitness","App","tileRenderer","path","elements","components_EdfListViewer","b","components_WitnessesListViewer","c","components_PersonsListViewer","d","components_EdfViewer","components_PersonViewer","components_WitnessesView","g","components_ItemsViewer","h","components_Manifest","ViewIdMosaicWindow","MosaicWindow","ofType","f","components_NavBar","lib","renderTile","initialValue","direction","first","second","splitPercentage","currentTheme","zeroStateView","Boolean","hostname","match","subscribe","setItem","stringify","getState","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a18c7b7.chunk.js","sourcesContent":["const ActionTypes = {\n  ASSIGN_EDF: 'ASSIGN_EDF',\n  ATTACH_WITNESS: 'ATTACH_WITNESS',\n  REQUEST_PERSONS: 'REQUEST_PERSONS',\n  RECEIVE_PERSONS: 'RECEIVE_PERSONS',\n  RECEIVE_PERSONS_FAILURE: 'RECEIVE_PERSONS_FAILURE',\n  ASSIGN_PERSON: 'ASSIGN_PERSON',\n  CLEAR_PERSON_INFO: 'CLEAR_PERSON_INFO',\n  CREATE_PERSON: 'CREATE_PERSON',\n  UPDATE_PERSON: 'UPDATE_PERSON',\n  REQUEST_WITNESSES: 'REQUEST_WITNESSES',\n  RECEIVE_WITNESSES: 'RECEIVE_WITNESSES',\n  RECEIVE_WITNESSES_FAILURE: 'RECEIVE_WITNESSES_FAILURE',\n  CHANGE_DATA_CREATION_VIEW: 'CHANGE_DATA_CREATION_VIEW',\n  CHANGE_FOCUSED_WITNESS: 'CHANGE_FOCUSED_WITNESS',\n  UPDATE_WITNESS: 'UPDATE_WITNESS',\n  CREATE_WITNESS: 'CREATE_WITNESS',\n  ATTACH_WITNESS: 'ATTACH_WITNESS',\n  UN_ATTACH_WITNESS: 'UN_ATTACH_WITNESS',\n  REQUEST_EDFS: 'REQUEST_EDFS',\n  RECEIVE_EDFS: 'RECEIVE_EDFS',\n  RECEIVE_EDFS_FAILURE: 'RECEIVE_EDFS_FAILURE',\n  CLEAR_EDF_INFO: 'CLEAR_EDF_INFO',\n  CREATE_EDF: 'CREATE_EDF',\n  UPDATE_EDF: 'UPDATE_EDF',\n  REQUEST_EDF_ITEMS: 'REQUEST_EDF_ITEMS',\n  RECEIVE_EDF_ITEMS: 'RECEIVE_EDF_ITEMS',\n  RECEIVE_EDF_ITEMS_FAILURE: 'RECEIVE_EDF_ITEMS_FAILURE',\n  UPDATE_ITEM: 'UPDATE_ITEM',\n  CREATE_ITEM: 'CREATE_ITEM',\n  REQUEST_EDF_MANIFESTATIONS: 'REQUEST_EDF_MANIFESTATIONS',\n  RECEIVE_EDF_MANIFESTATIONS: 'RECEIVE_EDF_MANIFESTATIONS',\n  RECEIVE_EDFS_MANIFESTATIONS_FAILURE: 'RECEIVE_EDFS_MANIFESTATIONS_FAILURE',\n  CLEAR_ASSIGNED_EDF_MANIFESTATIONS: 'CLEAR_ASSIGNED_EDF_MANIFESTATIONS',\n  REQUEST_MANIFEST: 'REQUEST_MANIFEST',\n  RECEIVE_MANIFEST: 'RECEIVE_MANIFEST',\n  RECEIVE_MANIFEST_FAILURE: 'RECEIVE_MANIFEST_FAILURE',\n  CHANGE_FOCUSED_ITEM: 'CHANGE_FOCUSED_ITEM',\n  ASSOCIATE_SURFACE: 'ASSOCIATE_SURFACE',\n  SELECT_CANVAS: 'SELECT_CANVAS'\n\n\n};\n\nexport default ActionTypes;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst edfReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ActionTypes.ASSIGN_EDF:\n      return {\n        id: action.id,\n        title: action.title,\n        description: action.description,\n        items: action.items\n      }\n    case ActionTypes.UPDATE_EDF:\n      return {\n        id: action.id,\n        title: action.title,\n        description: action.description\n      }\n    case ActionTypes.CLEAR_EDF_INFO:\n      return {}\n    default: return state;\n  }\n};\n\nexport default edfReducer;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst edfListReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.REQUEST_EDFS:\n      return state\n    case ActionTypes.RECEIVE_EDFS:\n      const newArray = action.edfList.map((item) => {\n        const shortId = item.expressionShortId.value\n        return {\n          id: shortId,\n          title: item.expressionTitle.value,\n          authorId: item.authorShortId.value,\n          description: \"scta description\",\n          status: \"SCTA\"\n        }\n      });\n      return newArray\n    case ActionTypes.REQUEST_EDF_ITEMS:\n      return state\n    case ActionTypes.RECEIVE_EDF_ITEMS:\n      const organizedItems = action.edfItems.map((item) => {\n        return {\n          id: item.itemShortId.value,\n          title: item.itemTitle.value,\n          questionTitle: item.questionTitle ? item.questionTitle.value : \"\"\n        }\n      })\n    return(\n      state.map(edf => {\n        if (edf.id === action.expressionShortId) {\n          return {\n            ...edf,\n            items: organizedItems\n          }\n        } else {\n          return edf\n        }\n      })\n    )\n    case ActionTypes.UPDATE_ITEM:\n        // this variable name \"with 1\" is to distinguish it from the variable below\n        // but this seems weird and suggest that this pattern is not the best way to do things.\n        const copyState1 = state.slice();\n        const edf1 = copyState1.find((edf) => edf.id === action.edfId);\n        const item = edf1.items.find((item) => item.id === action.id);\n        item.proposedChange = {\n          title: action.title,\n          questionTitle: action.questionTitle,\n        }\n        return [\n          ...copyState1\n        ]\n    case ActionTypes.CREATE_ITEM:\n      const copyState2 = state.slice();\n      const edf2 = copyState2.find((edf) => edf.id === action.edfId);\n      const newItem = {\n        id: action.id,\n        proposedChange:{\n          title: action.title,\n          questionTitle: action.questionTitle\n        }\n      }\n      edf2.items.push(newItem)\n      return [\n        ...copyState2\n      ]\n    //\n    case ActionTypes.REQUEST_EDF_MANIFESTATIONS:\n      return state\n    case ActionTypes.RECEIVE_EDF_MANIFESTATIONS:\n      const organizedManifestations = action.edfManifestations.map((m) => {\n        return {\n          id: m.witnessShortId.value,\n          title: \"title\",\n          description: \"description\"\n        }\n      })\n    return(\n      state.map(edf => {\n        if (edf.id === action.expressionShortId) {\n          return {\n            ...edf,\n            manifestations: organizedManifestations,\n          }\n        } else {\n          return edf\n        }\n      })\n    )\n    case ActionTypes.CREATE_EDF:\n      /// change this to available witness list\n      const edfList = state.slice();\n      edfList.push({\n        id: action.id,\n        title: action.title,\n        authorTitle: \"authorTitle\",\n        description: action.description,\n        items: [],\n        manifestations: [],\n        status: \"provisional\"\n      });\n      return edfList;\n    case ActionTypes.UPDATE_EDF:\n      return (\n        state.map(edf => {\n          if (edf.id === action.id) {\n            if (edf.status === 'provisional'){\n              return {\n                ...edf,\n                title: action.title,\n                description: action.description\n              }\n            }\n            else{\n              return {\n                ...edf,\n                proposedChange: {\n                  title: action.title,\n                  description: action.description\n                }\n              }\n            }\n          } else {\n            return edf\n          }\n        })\n      )\n    case ActionTypes.ASSOCIATE_SURFACE:\n\n    // something not quite right about this need to name vairable and the way the scope of above variable is accessible within this case.\n      const copyState3 = state.slice();\n      const edf3 = copyState3.find((edf) => edf.id === action.edfId);\n      let item3 = edf3.items.find((i) => i.id == action.itemId);\n\n      if (item3.surfaces)\n        item3.surfaces.push({surfaceId: action.surfaceId, itemId: action.itemId, witnessId: action.witnessId})\n      else {\n        item3.surfaces = []\n        item3.surfaces.push({surfaceId: action.surfaceId, itemId: action.itemId, witnessId: action.witnessId})\n      }\n      return [\n        ...copyState3\n      ]\n    case ActionTypes.RECEIVE_EDFS_FAILURE:\n    default: return state;\n  }\n};\n\nexport default edfListReducer;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst personsReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.REQUEST_PERSONS:\n      return state\n    case ActionTypes.RECEIVE_PERSONS:\n      const newArray = action.personsList.map((item) => {\n        const shortId = item.personShortId.value\n        return {\n          id: shortId,\n          title: item.personTitle.value,\n          description: \"scta description\",\n          status: \"SCTA\"\n        }\n      });\n      return newArray\n    case ActionTypes.RECEIVE_PERSONS_FAILURE:\n    case ActionTypes.CREATE_PERSON:\n      /// change this to available witness list\n      const personList = state.slice();\n      personList.push({\n        id: action.id,\n        title: action.title,\n        description: action.description,\n        status: \"provisional\"\n      });\n      return personList;\n    case ActionTypes.UPDATE_PERSON:\n      return (\n        state.map(person => {\n          if (person.id === action.id) {\n            if (person.status === 'provisional'){\n              return {\n                ...person,\n                title: action.title,\n                description: action.description\n              }\n            }\n            else{\n              return {\n                ...person,\n                proposedChange: {\n                  title: action.title,\n                  description: action.description\n                }\n              }\n            }\n          }\n          else {\n            return person\n          }\n        })\n      )\n    default: return state;\n  }\n};\n\nexport default personsReducer;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst personReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ActionTypes.ASSIGN_PERSON:\n      return {\n        id: action.id,\n        title: action.title,\n        description: action.description\n      }\n    case ActionTypes.UPDATE_PERSON:\n      return {\n        ...state,\n        title: action.title,\n        description: action.description\n      }\n    case ActionTypes.CLEAR_PERSON_INFO:\n      return {}\n    default: return state\n  }\n};\n\nexport default personReducer;\n","export function makeid() {\n  var text = \"\";\n  var possible =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < 6; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n","import ActionTypes from \"../actions/action-types\";\nimport { makeid } from \"../utils\";\n\n/**\n * manifestsReducer\n */\nconst witnessReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.ATTACH_WITNESS:\n      const currentWitnesses = state.slice();\n\n      if (!currentWitnesses.find(wit => wit.id === action.id)){\n        currentWitnesses.push(action.info);\n        return currentWitnesses;\n      }\n    case ActionTypes.UN_ATTACH_WITNESS:\n      const newList = state.filter((item) => item.id !== action.id);\n      return newList;\n    case ActionTypes.CLEAR_ASSIGNED_EDF_MANIFESTATIONS:\n      return []\n    case ActionTypes.UPDATE_WITNESS:\n      return (\n        state.map(witness => {\n          if (witness.id === action.id) {\n            return {\n              id: witness.id,\n              title: action.title,\n              description: action.description\n            }\n          } else {\n            return witness\n          }\n        })\n      )\n\n    default:\n      return state;\n  }\n};\n\nexport default witnessReducer;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst witnessesReducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.REQUEST_WITNESSES:\n      return state\n    case ActionTypes.RECEIVE_WITNESSES2:\n      return action.witnessesList\n    case ActionTypes.RECEIVE_WITNESSES:\n      const newArray = action.witnessesList.map((item) => {\n        const splitArray = item.witness.value.split(\"/resource/\")\n        const id = splitArray[splitArray.length - 1]\n        return {\n          id: id,\n          title: item.witnessTitle.value,\n          description: \"scta description\",\n          manifest: item.manifest.value,\n          status: \"SCTA\"\n        }\n      });\n      return newArray\n    case ActionTypes.RECEIVE_WITNESSES_FAILURE:\n    case ActionTypes.CREATE_WITNESS:\n      /// change this to available witness list\n      const witnessesList = state.slice();\n      witnessesList.push({\n        ...action.info,\n        status: \"provisional\"\n      });\n      return witnessesList;\n    case ActionTypes.UPDATE_WITNESS:\n      return (\n        state.map(witness => {\n          if (witness.id === action.id) {\n            return {\n              id: witness.id,\n              title: witness.title,\n              description: witness.description,\n              status: witness.status,\n              proposedChange: {\n                title: action.title,\n                description: action.description\n              }\n            }\n          } else {\n            return witness\n          }\n        })\n      )\n    default: return state;\n  }\n};\n\nexport default witnessesReducer;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst viewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ActionTypes.CHANGE_DATA_CREATION_VIEW:\n      return Object.assign({}, state, {\n        dataCreationView: action.dataCreationView\n      });\n    case ActionTypes.CHANGE_FOCUSED_WITNESS:\n      return Object.assign({}, state, {\n        focusedWitness: action.id\n      });\n    case ActionTypes.CHANGE_FOCUSED_ITEM:\n      return {\n        ...state,\n        focusedItem: action.id\n      }\n    case ActionTypes.SELECT_CANVAS:\n      return {\n        ...state,\n        canvasid: action.canvasid\n      }\n    default: return state;\n  }\n};\n\nexport default viewReducer;\n","import ActionTypes from '../actions/action-types';\n\n/**\n * manifestsReducer\n */\nconst manifestsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ActionTypes.REQUEST_MANIFEST:\n      return state\n    case ActionTypes.RECEIVE_MANIFEST:\n      return {\n        ...state,\n        [action.manifestid]: action.manifestdata\n      }\n      case ActionTypes.RECEIVE_MANIFEST_FAILURE:\n    default: return state;\n  };\n}\n\nexport default manifestsReducer;\n","import { combineReducers } from 'redux';\nimport edfInfo from './edfInfo';\nimport edfListInfo from './edfListInfo'\nimport personsInfo from './personsInfo';\nimport personInfo from './personInfo';\nimport witnessInfo from './witnessInfo';\nimport witnessesInfo from './witnessesInfo';\nimport view from './view';\nimport manifests from './manifests';\n\nconst rootReducer = combineReducers({\n  edfInfo: edfInfo,\n  edfListInfo: edfListInfo,\n  personsInfo: personsInfo,\n  personInfo: personInfo,\n  witnessInfo: witnessInfo,\n  witnessesInfo: witnessesInfo,\n  view: view,\n  manifests: manifests\n});\n\nexport default rootReducer;\n","import Axios from \"axios\"\nimport ActionTypes from './action-types';\nimport { makeid } from \"../utils\";\n\n\nexport function requestPersons() {\n  return {\n    type: ActionTypes.REQUEST_PERSONS,\n  };\n}\nexport function receivePersons(personsList) {\n  return {\n    type: ActionTypes.RECEIVE_PERSONS,\n    personsList\n  };\n}\nexport function receivePersonsFailure(error) {\n  return {\n    type: ActionTypes.RECEIVE_PERSONS_FAILURE,\n    error\n  };\n}\nexport function fetchPersons() {\n  const sparqlEndpoint = \"https://sparql.scta.info/ds/query\"\n  // \"?resource a <http://scta.info/resource/expression> .\",\n  // \"?resource <http://scta.info/property/level> '1' .\",\n  // \"?resource <http://www.loc.gov/loc.terms/relators/AUT> ?person .\",\n  const query = [\n    \"SELECT DISTINCT ?person ?personTitle ?personShortId \",\n    \"WHERE { \",\n    \"?person a <http://scta.info/resource/person> .\",\n    \"?person <http://scta.info/property/shortId> ?personShortId .\",\n    \"?person <http://purl.org/dc/elements/1.1/title> ?personTitle .\",\n    \"}\",\n    \"ORDER BY ?personTitle\"].join('');\n  return ((dispatch) => {\n    dispatch(requestPersons());\n    Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } }).then(function (res) {\n      dispatch(receivePersons(res.data.results.bindings))\n    })\n      .catch(error => dispatch(receivePersonsFailure(error))\n      );\n  });\n}\n\n// fetch witnesses\n\nexport function requestWitnesses() {\n  return {\n    type: ActionTypes.REQUEST_WITNESSES,\n  };\n}\nexport function receiveWitnesses(witnessesList) {\n  return {\n    type: ActionTypes.RECEIVE_WITNESSES,\n    witnessesList\n  };\n}\nexport function receiveWitnessesFailure(error) {\n  return {\n    type: ActionTypes.RECEIVE_WITNESSES_FAILURE,\n    error\n  };\n}\nexport function fetchWitnesses() {\n  const sparqlEndpoint = \"https://sparql.scta.info/ds/query\"\n  const query = [\n    \"SELECT DISTINCT ?witness ?witnessTitle ?witnessShortId ?manifest \",\n    \"WHERE { \",\n    \"?witness a <http://scta.info/resource/codex> .\",\n    // \"?witness <http://scta.info/property/shortId> ?witnessShortId .\",\n    \"?witness <http://purl.org/dc/elements/1.1/title> ?witnessTitle .\",\n    \"?witness <http://scta.info/property/hasCanonicalCodexItem> ?item .\",\n    \"?item <http://scta.info/property/hasOfficialManifest> ?manifest .\",\n    \"}\",\n    \"ORDER BY ?witnessTitle\"].join('');\n  return ((dispatch) => {\n    dispatch(requestWitnesses());\n    Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } }).then(function (res) {\n      dispatch(receiveWitnesses(res.data.results.bindings))\n    })\n      .catch(error => dispatch(receiveWitnessesFailure(error))\n      );\n  });\n}\n\nexport function requestManifest() {\n  return {\n    type: ActionTypes.REQUEST_MANIFEST,\n  };\n}\nexport function receiveManifest(manifestid, data) {\n  return {\n    type: ActionTypes.RECEIVE_MANIFEST,\n    manifestid: manifestid,\n    manifestdata: data\n  };\n}\nexport function receiveManifestFailure(error) {\n  return {\n    type: ActionTypes.RECEIVE_MANIFEST_FAILURE,\n    error\n  };\n}\nexport function fetchManifest(manifestid) {\n\n  return ((dispatch) => {\n    dispatch(requestManifest());\n    Axios.get(manifestid).then(function (res) {\n      dispatch(receiveManifest(manifestid, res.data))\n    })\n      .catch(error => dispatch(receiveManifestFailure(error))\n      );\n  });\n}\n\n// EDF actions\nexport function requestEdfList() {\n  return {\n    type: ActionTypes.REQUEST_EDFS,\n  };\n}\nexport function receiveEdfList(edfList) {\n  return {\n    type: ActionTypes.RECEIVE_EDFS,\n    edfList\n  };\n}\nexport function receiveEdfListFailure(error) {\n  return {\n    type: ActionTypes.RECEIVE_EDFS_FAILURE,\n    error\n  };\n}\nexport function fetchEdfList() {\n  const sparqlEndpoint = \"https://sparql.scta.info/ds/query\"\n  const query = [\n    \"SELECT DISTINCT ?expression ?expressionTitle ?authorTitle ?expressionShortId ?authorShortId \",\n    \"WHERE { \",\n    \"?expression a <http://scta.info/resource/expression> .\",\n    \"?expression <http://scta.info/property/level> '1' .\",\n    \"?expression <http://scta.info/property/shortId> ?expressionShortId .\",\n    \"?expression <http://www.loc.gov/loc.terms/relators/AUT> ?author .\",\n    \"?author <http://purl.org/dc/elements/1.1/title> ?authorTitle .\",\n    \"?author <http://scta.info/property/shortId> ?authorShortId .\",\n    \"?expression <http://purl.org/dc/elements/1.1/title> ?expressionTitle .\",\n    \"}\",\n    \"ORDER BY ?expressionTitle\"].join('');\n  return ((dispatch) => {\n    dispatch(requestEdfList());\n    Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } }).then(function (res) {\n      dispatch(receiveEdfList(res.data.results.bindings))\n    })\n      .catch(error => dispatch(receiveEdfListFailure(error))\n      );\n  });\n}\n\n/// EDF Item Fetch Sequence\n\n// EDF actions\nexport function requestEdfItems(expressionShortId) {\n  return {\n    type: ActionTypes.REQUEST_EDF_ITEMS,\n  };\n}\nexport function receiveEdfItems(expressionShortId, edfItems) {\n  return {\n    type: ActionTypes.RECEIVE_EDF_ITEMS,\n    expressionShortId,\n    edfItems\n  };\n}\nexport function receiveEdfItemsFailure(expressionShortId, error) {\n  return {\n    type: ActionTypes.RECEIVE_EDFS_ITEMS_FAILURE,\n    expressionShortId,\n    error\n  };\n}\nexport function fetchEdfItems(expressionShortId) {\n  const sparqlEndpoint = \"https://sparql.scta.info/ds/query\"\n  const query = [\n    \"SELECT DISTINCT ?item ?itemTitle ?questionTitle ?itemShortId \",\n    \"WHERE { \",\n    \"<http://scta.info/resource/\" + expressionShortId + \"> a <http://scta.info/resource/expression> .\",\n    \"?item <http://scta.info/property/isPartOfTopLevelExpression> <http://scta.info/resource/\" + expressionShortId + \"> .\",\n    \"?item <http://scta.info/property/structureType> <http://scta.info/resource/structureItem> .\",\n    \"?item <http://purl.org/dc/elements/1.1/title> ?itemTitle .\",\n    \"?item <http://scta.info/property/shortId> ?itemShortId .\",\n    \"OPTIONAL\",\n    \"{\",\n    \"?item <http://scta.info/property/questionTitle> ?questionTitle .\",\n    \"}\",\n    \"?item <http://scta.info/property/totalOrderNumber> ?order .\",\n    \"}\",\n    \"ORDER BY ?order\"].join('');\n  return ((dispatch) => {\n    dispatch(requestEdfItems(expressionShortId));\n    Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } }).then(function (res) {\n      dispatch(receiveEdfItems(expressionShortId, res.data.results.bindings))\n    })\n      .catch(error => dispatch(receiveEdfItemsFailure(expressionShortId, error))\n      );\n  });\n}\n\n// EDF Witness List request sequence\nexport function requestEdfManifestations(expressionShortId) {\n  return {\n    type: ActionTypes.REQUEST_EDF_MANIFESTATIONS,\n  };\n}\nexport function receiveEdfManifestations(expressionShortId, edfManifestations) {\n  return {\n    type: ActionTypes.RECEIVE_EDF_MANIFESTATIONS,\n    expressionShortId,\n    edfManifestations\n  };\n}\nexport function receiveEdfManifestationsFailure(expressionShortId, error) {\n  return {\n    type: ActionTypes.RECEIVE_EDFS_MANIFESTATIONS_FAILURE,\n    expressionShortId,\n    error\n  };\n}\nexport function fetchEdfManifestations(expressionShortId) {\n  const sparqlEndpoint = \"https://sparql.scta.info/ds/query\"\n  const query = [\n    \"SELECT DISTINCT ?manifestationShortId ?witnessShortId \",\n    \"WHERE { \",\n    \"<http://scta.info/resource/\" + expressionShortId + \"> <http://scta.info/property/hasManifestation> ?manifestation .\",\n    \"?manifestation <http://scta.info/property/shortId> ?manifestationShortId .\",\n    \"?manifestation <http://scta.info/property/hasSlug> ?witnessShortId .\",\n    \"}\"\n    ].join('');\n  return ((dispatch) => {\n    dispatch(requestEdfManifestations(expressionShortId));\n    Axios.get(sparqlEndpoint, { params: { \"query\": query, \"output\": \"json\" } }).then(function (res) {\n      dispatch(receiveEdfManifestations(expressionShortId, res.data.results.bindings))\n      res.data.results.bindings.forEach((item) => {\n        dispatch(attachWitness({id: item.witnessShortId.value, title: \"title\", description: \"description\"}))\n      });\n\n    })\n      .catch(error => dispatch(receiveEdfManifestationsFailure(expressionShortId, error))\n      );\n  });\n}\n\nexport function assignManifestations(edf) {\n  return ((dispatch) => {\n    edf.manifestations.forEach((m) => {\n      dispatch(attachWitness({id: m.id, title: \"title\", description: \"description\"}))\n    })\n  });\n}\nexport function clearAssignedEdfManifestations(edfId) {\n  return {\n    type: ActionTypes.CLEAR_ASSIGNED_EDF_MANIFESTATIONS,\n    edfId: edfId\n  };\n}\n\n\nexport function changeDataCreationView(dataCreationView) {\n  if (!dataCreationView) {\n    dataCreationView = \"edfCreation\"\n  }\n\n  return {\n    type: ActionTypes.CHANGE_DATA_CREATION_VIEW,\n    dataCreationView\n  }\n}\n\n\nexport function createAndAttachWitness(info) {\n  const id = \"cod-\" + makeid();\n  info[\"id\"] = id\n  return ((dispatch) => {\n    dispatch(createWitness(info))\n    dispatch(attachWitness(info))\n  });\n}\n\nexport function createWitness(info) {\n\n  return {\n    type: ActionTypes.CREATE_WITNESS,\n    info\n  }\n}\n\nexport function attachWitness(info) {\n  // Assigns witness to an EDF\n  return {\n    type: ActionTypes.ATTACH_WITNESS,\n    info\n  }\n}\n\nexport function unAttachWitness(id) {\n  // Un Assigns witness to an EDF\n  return {\n    type: ActionTypes.UN_ATTACH_WITNESS,\n    id\n  }\n}\n\nexport function updateWitness(id, title, description) {\n  return {\n    type: ActionTypes.UPDATE_WITNESS,\n    title,\n    description,\n    id\n  }\n}\n\nexport function changeFocusedWitness(id) {\n  return {\n    type: ActionTypes.CHANGE_FOCUSED_WITNESS,\n    id: id\n  }\n}\n\n\nexport function createAndAssignEdf(info) {\n  const id = makeid();\n  info.id = id;\n  return ((dispatch) => {\n    dispatch(createEdf(info))\n    dispatch(assignEdf(info))\n  });\n}\nexport function assignEdf(info) {\n  return {\n    type: ActionTypes.ASSIGN_EDF,\n    id: info.id,\n    title: info.title,\n    authorTitle: info.authorTitle,\n    description: info.description\n  }\n}\nexport function createEdf(info) {\n  return {\n    type: ActionTypes.CREATE_EDF,\n    id: info.id,\n    title: info.title,\n    authorTitle: info.authorTitle,\n    description: info.description\n  }\n}\nexport function updateEdf(info) {\n  return {\n    type: ActionTypes.UPDATE_EDF,\n    id: info.id,\n    title: info.title,\n    authorTitle: info.authorTitle,\n    description: info.description\n  }\n}\nexport function clearEdfInfo(info) {\n  return {\n    type: ActionTypes.CLEAR_EDF_INFO,\n  }\n}\n\n// person actions\n\nexport function createAndAssignPerson(info) {\n  const id = \"P\" + makeid();\n  info.id = id;\n  return ((dispatch) => {\n    dispatch(createPerson(info))\n    dispatch(assignPerson(info))\n  });\n}\nexport function assignPerson(info) {\n  return {\n    type: ActionTypes.ASSIGN_PERSON,\n    id: info.id,\n    title: info.title,\n    description: info.description\n  }\n}\nexport function createPerson(info) {\n  return {\n    type: ActionTypes.CREATE_PERSON,\n    id: info.id,\n    title: info.title,\n    description: info.description\n  }\n}\nexport function updatePerson(info) {\n  return {\n    type: ActionTypes.UPDATE_PERSON,\n    id: info.id,\n    title: info.title,\n    description: info.description\n  }\n}\nexport function clearPersonInfo() {\n  return {\n    type: ActionTypes.CLEAR_PERSON_INFO,\n  }\n}\n\nexport function updateItem(info) {\n  return {\n    type: ActionTypes.UPDATE_ITEM,\n    ...info\n  }\n}\n\nexport function createItem(edfId, info) {\n  const itemId = edfId + \"-\" + makeid();\n  return {\n    type: ActionTypes.CREATE_ITEM,\n    edfId: edfId,\n    id: itemId,\n    ...info\n  }\n}\n\nexport function changeFocusedItem(id) {\n  return {\n    type: ActionTypes.CHANGE_FOCUSED_ITEM,\n    id: id\n  }\n}\n\nexport function associateSurface(surfaceId, witnessId, itemId, edfId){\n  return {\n    type: ActionTypes.ASSOCIATE_SURFACE,\n    surfaceId,\n    witnessId,\n    itemId,\n    edfId\n  }\n}\nexport function selectCanvas(canvasid){\n  return {\n    type: ActionTypes.SELECT_CANVAS,\n    canvasid\n  }\n}\n","// Topics for understanding\n// redux modules for nested stores\n// state normalisation\n// (normalizer library)\n\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/index';\nimport * as ActionCreators from './actions';\n\nconst loggerMiddleware = createLogger();\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\n\nfunction loadState(){\n  try {\n    const state = JSON.parse(localStorage.getItem(\"data-creation-state\"));\n    //only load state if state is not empty\n    if (state){\n      return state\n    }\n    else{\n      return undefined\n    }\n  }\n  // if local storage fails do nothing and proceed with the default state\n  catch (e) {\n    return undefined\n    }\n  }\nconst persistedState = loadState();\n\nexport const store = createStore(\n  rootReducer,\n  persistedState,\n  composeWithDevTools(applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware,\n  )),\n);\n\nexport const actions = ActionCreators;\nexport default { actions, store };\n","import React, { Component } from 'react';\nimport fileDownload from 'js-file-download';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport { exportToXml } from \"../exportToXml\";\nimport { exportToCdf } from \"../exportToCdf\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDownloadOnclick = this.handleDownloadOnclick.bind(this);\n    this.handleDownloadCdfs = this.handleDownloadCdfs.bind(this);\n  }\n  handleDownloadOnclick(){\n    const data = exportToXml(this.props)\n    fileDownload(data, this.props.edfInfo.id +'.xml');\n    window.location.href = \"data:application/xml;charset=utf-8,\" + encodeURI(data)\n  }\n  handleDownloadCdfs(){\n    this.props.witnessesInfo.forEach((w) => {\n      if (w.proposedChange || w.status === 'provisional'){\n        const data = exportToCdf(w)\n        fileDownload(data, w.id +'.xml');\n        window.location.href = \"data:application/xml;charset=utf-8,\" + encodeURI(data)\n      }\n    })\n\n  }\n  render() {\n    return (\n      <div className=\"navbar\">\n        <a onClick={this.handleDownloadOnclick}>Export Edf v. 0.0.0</a> |\n        <a onClick={this.handleDownloadCdfs}>Export Cdf(s) v. 0.0.0</a>\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof NavBar\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    edfListInfo: state.edfListInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof NavBar\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  changeDataCreationView: (view) => (\n    dispatch(actions.changeDataCreationView(view))\n  ),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NavBar);\n","export function exportToXml(state) {\n\n  const witnesses = state.witnessInfo.map((witness) => {\n    let witTitle = \"\"\n    let witDescription = \"\"\n    // first try to get title from witness list using id assigned to working edf\n    const targetWit = state.witnessesInfo.find((wit) => wit.id === witness.id)\n    if (targetWit){\n      witTitle = targetWit.proposedChange ? targetWit.proposedChange.title : targetWit.title;\n      witDescription = targetWit.proposedChange ? targetWit.proposedChange.description : targetWit.description;\n    }\n    // second try to get title from manifestation list assigned to edf received from scta\n    //(this is need for non manuscript (born digital) manifestations that do not correlate to a witness in the witness list)\n    else{\n      const edf = state.edfListInfo.find((edf) => edf.id === state.edfInfo.id)\n      const edfWit = edf.manifestations.find((wit) => wit.id === witness.id)\n      witTitle = edfWit.proposedChange ? edfWit.proposedChange.title : edfWit.title;\n      witDescription = edfWit.proposedChange ? edfWit.proposedChange.description : edfWit.description;\n    }\n    text = [\n    '     <witness id=\"' + witness.id + '\">',\n    '       <slug>' + witness.id + '</slug>',\n    '       <title>' + witTitle.replace(\"&\", \"&amp;\") + '</title>',\n    '       <initial>' + witness.id + '</initial>',\n    '     </witness>'\n    ].join(\"\\n\")\n    return text\n  })\n\n  const targetEdf = state.edfListInfo.find((edf) => edf.id === state.edfInfo.id)\n  let items = [];\n  if (targetEdf.items){\n    items = targetEdf.items.map((item) => {\n      let witnessesSurfaces = []\n      if (item.surfaces){\n        const surfaceWitness = item.surfaces.map((s) => {\n          return s.witnessId\n        })\n        const uniqueSurfaceWitness = [...new Set(surfaceWitness)]\n        witnessesSurfaces = uniqueSurfaceWitness.map((w) => {\n          let surfaces = item.surfaces.map((s) => {\n            if (s.witnessId === w){\n              return '           <folio>' + s.surfaceId + '</folio>'\n            }\n          })\n          // needed to clear out undefined values from above map\n          surfaces = surfaces.filter((item) => item != undefined);\n          const witness = [\n            '         <witness ref=\"#' + w + '\">',\n            surfaces.join(\"\\n\"),\n            '         </witness>',\n          ].join(\"\\n\")\n          return witness\n        })\n\n      }\n\n      const title = item.proposedChange ? item.proposedChange.title : item.title;\n      const questionTitle = item.proposedChange ? item.proposedChange.questionTitle : item.questionTitle;\n      text = [\n      '     <item id=\"' + item.id + '\">',\n      '       <fileName filestem=\"' + item.id + '\"/>',\n      '       <title>' + title + '</title>',\n      '       <questionTitle>' + questionTitle + '</questionTitle>',\n      '       <hasWitnesses>',\n      witnessesSurfaces.join(\"\\n\"),\n      '       </hasWitnesses>',\n      '     </item>'\n      ].join(\"\\n\")\n      return text\n    })\n  }\n  const person = state.personsInfo.find((p) => p.id === state.personInfo.id)\n  const personTitle = person.proposedChange ? person.proposedChange.title : person.title;\n  const personDescription = person.proposedChange ? person.proposedChange.description : person.description;\n  const edf = state.edfListInfo.find((edf) => edf.id === state.edfInfo.id)\n  const edfTitle = edf.proposedChange ? edf.proposedChange.title : edf.title;\n  const edfDescription = edf.proposedChange ? edf.proposedChange.description : edf.description;\n  var text = [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<?xml-model href=\"https://raw.githubusercontent.com/scta/edf-schema/master/src/projectfile.rng\" type=\"application/xml\" schematypens=\"http://relaxng.org/ns/structure/1.0\"?>',\n    '<listofFileNames>',\n    '  <header>',\n    '    <authorName>' + personTitle + '</authorName>',\n    '    <commentaryName>' + edfTitle.replace(\"&\", \"&amp\") + '</commentaryName>',\n    '    <commentaryid>' + state.edfInfo.id + '</commentaryid>',\n    '    <commentaryslug>' + state.edfInfo.id + '</commentaryslug>',\n    '    <alias>' + edfTitle.replace(/\\s+/g, \" \") + '</alias>',\n    '    <authorUri>http://scta.info/resource/' + state.personInfo.id + '</authorUri>',\n    '    <parentUri>http://scta.info/resource/' + state.edfInfo.id + '</parentUri>',\n    '    <parentWorkGroup>http://scta.info/resource/uncategorized</parentWorkGroup>',\n    '    <textfilesdir>/Users/jcwitt/Projects/scta/scta-texts/' + state.edfInfo.id + '/</textfilesdir>',\n    '    <questionListSource/>',\n    '    <questionListOriginalEditor/>',\n    '    <questionListEncoder/>',\n    '    <gitRepoBase type=\"toplevel\">https://github.com/scta-texts/</gitRepoBase>',\n    '    <hasWitnesses>',\n    witnesses.join(\"\\n\"),\n    '    </hasWitnesses>',\n    '  </header>',\n    '  <div id=\"body\">',\n    items.join(\"\\n\"),\n    '  </div>',\n    '</listofFileNames>',\n].join(\"\\n\")\n  return text;\n}\n","export function exportToCdf(wit) {\n  const title = wit.proposedChange ? wit.proposedChange.title : wit.title;\n  const description = wit.proposedChange ? wit.proposedChange.description : wit.description;\n  const manifest = wit.proposedChange ? wit.proposedChange.manifest : wit.manifest;\n  var text = [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<codex>',\n    '  <head>',\n    '    <type>manuscript</type>',\n    '    <shortid alias=\"alias\">' + wit.id + '</shortid>',\n    '    <title>' + title + '</title>',\n    '    <initial>P</initial>',\n    '    <description>' + description + '</description>',\n    '    <hasItems>',\n    '      <item>',\n    '        <canonical>true</canonical>',\n    '        <shortid>' + wit.id + 'cod-dfjq1w/item1' + '</shortid>',\n    '        <holdingInstitution>holding institution id goes here</holdingInstitution>',\n    '        <libraryRecord>library catalogue url goes here</libraryRecord>',\n    '        <canvasBase></canvasBase>',\n    '        <manifestOfficial>' + manifest + '</manifestOfficial>',\n    '      </item>',\n    '    </hasItems>',\n    '  </head>',\n    '  <surfaces> </surfaces>',\n    '</codex>'].join(\"\\n\")\n    return text;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nclass PersonsListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePersonSelect = this.handlePersonSelect.bind(this);\n  }\n  handlePersonSelect(){\n    this.props.assignPerson({ id: this.props.id, title: this.props.title, description: \"description\" })\n  }\n  render() {\n    const displayProposedChange = (person) => {\n      if (person.proposedChange){\n        return(\n          <div className=\"provisional\">Proposed Change:\n            <p>title {this.props.proposedChange.title}</p>\n            <p>description {this.props.proposedChange.description} </p>\n            </div>\n        )\n      }\n\n    }\n    return (\n      <div>\n      <p className={this.props.status} onClick={this.handlePersonSelect} ref=\"item\" value={this.props.id} title={this.props.title} key={this.props.id}>{this.props.title}</p>\n      {displayProposedChange(this.props)}\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof NavBar\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof PersonsListItem\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  assignPerson: (info) => (\n    dispatch(actions.assignPerson(info))\n  )\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PersonsListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport PersonsListItem from './PersonsListItem.js';\n\nimport { InputGroup } from \"@blueprintjs/core\";\n\nclass PersonsListViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnChangeSearchText = this.handleOnChangeSearchText.bind(this);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  handleOnChangeSearchText(e){\n    e.preventDefault();\n    const searchText = e.target.value\n    this.setState(() => ({searchText: searchText}))\n  }\n  render() {\n    function displayAuthors(props, searchText){\n      const displayAuthors = props.personsInfo.map((author) =>{\n        if (!searchText || author.title.includes(searchText)){\n          return(\n            <PersonsListItem\n              key={author.id}\n              id={author.id}\n              title={author.title}\n              status={author.status}\n              proposedChange={author.proposedChange}\n            />\n          )\n        }\n      });\n      return displayAuthors\n    }\n    return (\n      <div className=\"personsList\">\n        <InputGroup\n            disabled={false}\n            large={false}\n            leftIcon=\"filter\"\n            onChange={this.handleOnChangeSearchText}\n            placeholder=\"Filter People ...\"\n            small={true}\n        />\n        {displayAuthors(this.props, this.state.searchText)}\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof NavBar\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof NavBar\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  updatePerson: (name, description) => (\n    dispatch(actions.updatePerson(name, description))\n  )\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PersonsListViewer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nclass WitnessesListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleWitnessSelect = this.handleWitnessSelect.bind(this);\n  }\n  handleWitnessSelect() {\n    this.props.attachWitness({id: this.props.witness.id, title: this.props.witness.title, description: this.props.witness.description})\n  }\n  render() {\n    const displayProposedChange = () => {\n      if (this.props.witness.proposedChange){\n        return(\n          <div className=\"provisional\">Proposed Change:\n            <p>title {this.props.witness.proposedChange.title}</p>\n            <p>description {this.props.witness.proposedChange.description} </p>\n            </div>\n        )\n      }\n\n    }\n    return (\n      <div>\n      <p className={this.props.witnessStatus} onClick={this.handleWitnessSelect} ref=\"item\" value={this.props.witness.id} name={this.props.witness.title} key={this.props.witness.id}>{this.props.witness.title}</p>\n      {displayProposedChange()}\n      </div>\n\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof PersonsListItem\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view,\n    manifest: state.manifest\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof PersonsListItem\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  attachWitness: (info) => (\n    dispatch(actions.attachWitness(info))\n  ),\n  fetchManifest: (manifest) => (\n    dispatch(actions.fetchManifest(manifest))\n  )\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WitnessesListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport WitnessesListItem from './WitnessesListItem.js';\n\nimport { InputGroup } from \"@blueprintjs/core\";\n\nclass WitnessesListViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnChangeSearchText = this.handleOnChangeSearchText.bind(this);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  handleOnChangeSearchText(e){\n    e.preventDefault();\n    const searchText = e.target.value\n    this.setState(() => ({searchText: searchText}))\n  }\n  render() {\n    function displayWitnesses(props, searchText){\n\n      const displayWitnesses = props.witnessesInfo.map((witness) =>{\n        if (!searchText || witness.title.includes(searchText)){\n          //temporary shortId get because codices are currently not listing shortId in SCTA rdf graph\n          //const splitArray = witness.witness.value.split(\"/resource/\")\n          //const id = splitArray[splitArray.length - 1]\n          return(\n            <WitnessesListItem\n              key={witness.id}\n              witness={witness}\n              />\n          )\n        }\n      });\n      return displayWitnesses\n    }\n    return (\n      <div className=\"witnessesList\">\n          <InputGroup\n              disabled={false}\n              large={false}\n              leftIcon=\"filter\"\n              onChange={this.handleOnChangeSearchText}\n              placeholder=\"Filter Witnesses ...\"\n              small={true}\n          />\n        {displayWitnesses(this.props, this.state.searchText)}\n      </div>\n\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof WitnessesListViewer\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessesInfo: state.witnessesInfo,\n    witnessInfo: state.witnessInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof WitnessesListViewer\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WitnessesListViewer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nclass EdfListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleEdfSelect = this.handleEdfSelect.bind(this);\n  }\n  handleEdfSelect(e) {\n    e.preventDefault();\n    const info = {\n      id: this.props.edfId,\n      title: this.props.edfTitle,\n      description: 'description'\n    }\n    this.props.assignEdf(info)\n    if (!this.props.items){\n      this.props.fetchEdfItems(this.props.edfId)\n    }\n    this.props.clearAssignedEdfManifestations(this.props.edfId)\n    if (!this.props.manifestations){\n      this.props.fetchEdfManifestations(this.props.edfId)\n    }\n    else{\n      const edfObject = this.props.edfList.find((edf) => edf.id === this.props.edfId)\n      this.props.assignManifestations(edfObject)\n    }\n    this.props.assignPerson({id: this.props.authorId, title: \"title\", description: 'description'})\n  }\n  render() {\n    const displayProposedChange = (edf) => {\n      if (edf.proposedChange){\n        return(\n          <div className=\"provisional\">Proposed Change:\n            <p>title {this.props.proposedChange.title}</p>\n            <p>description {this.props.proposedChange.description} </p>\n            </div>\n        )\n      }\n\n    }\n    return (\n      <div>\n      <p className={this.props.edfStatus} onClick={this.handleEdfSelect} ref=\"item\" value={this.props.edfId} name={this.props.edfTitle} key={this.props.edfId}>\n        {this.props.authorTitle + ' – ' + this.props.edfTitle}\n      </p>\n      {displayProposedChange(this.props)}\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof NavBar\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    witnessesInfo: state.witnessesInfo,\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof EdfListItem\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  assignEdf: (info) => (\n    dispatch(actions.assignEdf(info))\n  ),\n  fetchEdfItems: (expressionShortId) => (\n    dispatch(actions.fetchEdfItems(expressionShortId))\n  ),\n  fetchEdfManifestations: (expressionShortId) => (\n    dispatch(actions.fetchEdfManifestations(expressionShortId))\n  ),\n  clearAssignedEdfManifestations: (edfId) => (\n    dispatch(actions.clearAssignedEdfManifestations(edfId))\n  ),\n  assignManifestations: (edfObject) => (\n    dispatch(actions.assignManifestations(edfObject))\n  ),\n  assignPerson: (info) => (\n    dispatch(actions.assignPerson(info))\n  )\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EdfListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport EdfListItem from './EdfListItem.js';\n\nimport { InputGroup } from \"@blueprintjs/core\";\n\nclass EdfListViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnChangeSearchText = this.handleOnChangeSearchText.bind(this);\n    this.state = {\n      searchText: \"\"\n    }\n  }\n  handleOnChangeSearchText(e) {\n    e.preventDefault();\n    const searchText = e.target.value\n    this.setState(() => ({ searchText: searchText }))\n  }\n  render() {\n    function displayEdfs(props, searchText) {\n\n      const displayEdfs = props.edfListInfo.map((edf) => {\n        const author = props.personsInfo.find((p) => p.id === edf.authorId)\n        const authorTitle = author ? author.title : \"\"\n        if (!searchText\n          || edf.title.toLowerCase().includes(searchText.toLowerCase())\n          || authorTitle.toLowerCase().includes(searchText.toLowerCase())\n        ) {\n\n          return (\n            <EdfListItem\n              key={edf.id}\n              authorTitle={authorTitle}\n              authorId={edf.authorId}\n              edfId={edf.id}\n              edfTitle={edf.title}\n              edfStatus={edf.status}\n              proposedChange={edf.proposedChange}\n              items={edf.items}\n            />\n          )\n        }\n      });\n      return displayEdfs\n    }\n    return (\n      <div className=\"edfsList\">\n        <InputGroup\n            disabled={false}\n            large={false}\n            leftIcon=\"filter\"\n            onChange={this.handleOnChangeSearchText}\n            placeholder=\"Filter Text ...\"\n            small={true}\n        />\n        {displayEdfs(this.props, this.state.searchText)}\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof NavBar\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    edfListInfo: state.edfListInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof NavBar\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  updatePerson: (name, description) => (\n    dispatch(actions.updatePerson(name, description))\n  )\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EdfListViewer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nimport { Button } from \"@blueprintjs/core\";\n\nclass WitnessView extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleEdit = this.handleToggleEdit.bind(this);\n    this.handleRemoveWitness = this.handleRemoveWitness.bind(this);\n    this.handleFocusWitness = this.handleFocusWitness.bind(this);\n    this.state = {\n      editMode: false,\n    }\n  }\n  componentDidMount() {\n\n  }\n\n  handleToggleEdit(e){\n    e.preventDefault();\n    const title = this.refs.title.textContent;\n    const description = this.refs.description.textContent;\n\n    if (this.state.editMode){\n      this.props.updateWitness(this.props.id, title, description)\n    }\n    this.setState((state) => ({editMode: !state.editMode}))\n  }\n  handleRemoveWitness(e){\n    e.preventDefault();\n    this.props.unAttachWitness(this.props.id)\n    if (this.props.id === this.props.view.focusedWitness){\n      this.props.changeFocusedWitness(\"\")\n    }\n  }\n  handleFocusWitness(e){\n    e.preventDefault();\n    this.props.changeFocusedWitness(this.props.id)\n    const witness = this.props.witnessesInfo.find((w) => w.id === this.props.id)\n    if (witness){\n      const manifestId = witness.manifest\n      this.props.fetchManifest(manifestId)\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        <p ref=\"id\">{this.props.id}</p>\n        <p contentEditable={this.state.editMode} ref=\"title\">{this.props.title}</p>\n        <p contentEditable={this.state.editMode} ref=\"description\">Description: {this.props.description}</p>\n        <p contentEditable={this.state.editMode} ref=\"manifest\">Manifest: {this.props.manifest}</p>\n        <Button onClick={this.handleToggleEdit} active={this.state.editMode}>Toggle Edit</Button>\n        <Button onClick={this.handleRemoveWitness}>Remove</Button>\n        <Button onClick={this.handleFocusWitness}>Focus</Button>\n      </div>\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof PersonCreation\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof PersonCreation\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  changeFocusedWitness: (id) => (\n    dispatch(actions.changeFocusedWitness(id))\n  ),\n  updateWitness: (id, name, description) =>\n    dispatch(actions.updateWitness(id, name, description)),\n  unAttachWitness: (id) =>\n    dispatch(actions.unAttachWitness(id)),\n  fetchManifest: (manifestId) =>\n    dispatch(actions.fetchManifest(manifestId))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WitnessView);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store\";\nimport { Button, FormGroup, InputGroup} from \"@blueprintjs/core\";\n\nclass WitnessCreation extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddNewWitness = this.handleAddNewWitness.bind(this);\n  }\n  componentDidMount() { }\n\n  handleAddNewWitness(e) {\n    e.preventDefault();\n    const title = this.refs.form.title.value;\n    const description = this.refs.form.description.value;\n    const manifest = this.refs.form.manifest.value;\n    this.props.createAndAttachWitness({title: title, description: description, manifest: manifest});\n    //clears form after submission; not sure this is the correct react way to do this.\n    this.refs.form.title.value = \"\";\n    this.refs.form.description.value = \"\";\n    this.refs.form.manifest.value = \"\";\n  }\n  render() {\n    return (\n      <div className=\"data-creation-form\">\n        <h3>Assign New Witness</h3>\n        <form onSubmit={this.handleAddNewWitness} ref=\"form\">\n          <FormGroup  label=\"Title\" labelFor=\"title\">\n            <InputGroup\n                id=\"title\"\n                placeholder=\"title\"\n            />\n            </FormGroup>\n            <FormGroup  label=\"Description\" labelFor=\"description\">\n              <InputGroup\n                  id=\"description\"\n                  placeholder=\"description\"\n\n              />\n            </FormGroup>\n            <FormGroup  label=\"Manifest\" labelFor=\"manifest\">\n              <InputGroup\n                  id=\"manifest\"\n                  placeholder=\"manifest\"\n\n              />\n            </FormGroup>\n          <Button type=\"submit\">Submit</Button>\n      </form>\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof WitnessCreation\n * @private\n */\nconst mapStateToProps = state => ({\n  edfInfo: state.edfInfo,\n  personsInfo: state.personsInfo,\n  personInfo: state.personInfo,\n  witnessInfo: state.witnessInfo,\n  witnessesInfo: state.witnessesInfo,\n  view: state.view\n});\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof WitnessCreation\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  createAndAttachWitness: (info) =>\n    dispatch(actions.createAndAttachWitness(info))\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WitnessCreation);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport WitnessView from './WitnessView';\nimport WitnessCreation from \"./WitnessCreation\";\n\n\nclass WitnessesView extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const displayWitnesses = (witnesses) => {\n      const witnessArray = witnesses.map(item => {\n        const wit = this.props.witnessesInfo.find((wit) => wit.id === item.id)\n        if (wit){\n          const manifest = wit.proposedChange ? wit.proposedChange.manifest : wit.manifest;\n          const title = wit.proposedChange ? wit.proposedChange.title : wit.title;\n          const description = wit.proposedChange ? wit.proposedChange.description : wit.description;\n\n          return (\n            <WitnessView title={title} description={description} id={item.id} key={item.id} manifest={manifest}/>\n          )\n        }\n        else{\n          return (\n            <WitnessView title={item.title} description={item.description} id={item.id} key={item.id} manifest={item.manifest} />\n          )\n        }\n      })\n      return witnessArray\n    }\n    return (\n      <div>\n        <h3>Witness Info</h3>\n        {displayWitnesses(this.props.witnessInfo)}\n        <WitnessCreation/>\n\n      </div>\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof PersonCreation\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof PersonCreation\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WitnessesView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nimport { Button } from \"@blueprintjs/core\";\n\n// import '@blueprintjs/core/lib/css/blueprint.css';\n// import '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\n\nclass PersonViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleEdit = this.handleToggleEdit.bind(this);\n    this.handleAssignNewPerson = this.handleAssignNewPerson.bind(this);\n    this.state = {\n      editMode: false,\n    }\n  }\n  componentDidMount() {\n\n  }\n  handleAssignNewPerson(e){\n    e.preventDefault();\n    this.props.clearPersonInfo()\n    this.setState((state) => ({editMode: true}))\n  }\n  handleToggleEdit(e){\n    e.preventDefault();\n    const title = this.refs.title.textContent;\n    const description = this.refs.description.textContent;\n    if (this.state.editMode){\n      if (this.props.personInfo.id){\n        this.props.updatePerson({id: this.props.personInfo.id, title: title, description: description})\n      }\n      else{\n        this.props.createAndAssignPerson({title: title, description: description});\n      }\n    }\n    this.setState((state) => ({editMode: !state.editMode}))\n  }\n\n  render() {\n    let title = \"\"\n    let description = \"\"\n    const person = this.props.personsInfo.find((p) => p.id === this.props.personInfo.id)\n    if (person){\n      title = person.proposedChange ? person.proposedChange.title : person.title;\n      description = person.proposedChange ? person.proposedChange.description : person.description;\n    }\n    return (\n      <div>\n        <h3>Person Info</h3>\n        <div>\n          <p>Author ID: {this.props.personInfo.id}</p>\n          <p>Author</p>\n          <p contentEditable={this.state.editMode} ref=\"title\">\n            {title}\n          </p>\n        </div>\n        <div>\n          <p>Description</p>\n          <p contentEditable={this.state.editMode} ref=\"description\">\n            {description}</p>\n        </div>\n        <Button onClick={this.handleToggleEdit} active={this.state.editMode}>Toggle Edit</Button>\n        <Button onClick={this.handleAssignNewPerson}>Assign New Person Entry</Button>\n      </div>\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof PersonCreation\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof PersonViewer\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  assignPerson: (info) => (\n    dispatch(actions.assignPerson(info))\n  ),\n  clearPersonInfo: () => (\n    dispatch(actions.clearPersonInfo())\n  ),\n  updatePerson: (info) => (\n    dispatch(actions.updatePerson(info))\n  ),\n  createAndAssignPerson: (info) => (\n    dispatch(actions.createAndAssignPerson(info))\n  )\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PersonViewer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nimport { Button } from \"@blueprintjs/core\";\n\n\nclass EdfViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleEdit = this.handleToggleEdit.bind(this);\n    this.handleCreateNewEdf = this.handleCreateNewEdf.bind(this);\n    this.state = {\n      editMode: false,\n    }\n  }\n  componentDidMount() {\n\n  }\n  handleCreateNewEdf(e){\n    e.preventDefault();\n    this.props.clearEdfInfo()\n    this.setState((state) => ({editMode: true}))\n  }\n  handleToggleEdit(e){\n    e.preventDefault();\n    const title = this.refs.title.textContent;\n    const description = this.refs.description.textContent;\n    if (this.state.editMode){\n      if (this.props.edfInfo.id){\n        this.props.updateEdf({id: this.props.edfInfo.id, title: title, description: description});\n      }\n      else{\n        this.props.createAndAssignEdf({title: title, description: description});\n      }\n    }\n    this.setState((state) => ({editMode: !state.editMode}))\n  }\n\n  render() {\n    let title = \"\"\n    let description = \"\"\n    const edf = this.props.edfListInfo.find((edf) => edf.id === this.props.edfInfo.id)\n    if (edf) {\n      title = edf.proposedChange ? edf.proposedChange.title : edf.title;\n      description = edf.proposedChange ? edf.proposedChange.description : edf.description;\n    }\n    return (\n      <div>\n        <h3>Text Info</h3>\n        <div>\n          <p>Id: {this.props.edfInfo.id}</p>\n          <p>Title</p>\n          <p contentEditable={this.state.editMode} ref=\"title\">\n            {title}\n          </p>\n        </div>\n        <div>\n          <p>Description</p>\n          <p contentEditable={this.state.editMode} ref=\"description\">\n            {description}</p>\n        </div>\n        <Button onClick={this.handleToggleEdit} active={this.state.editMode}>Toggle Edit</Button>\n        <Button onClick={this.handleCreateNewEdf}>Start New Edf Entry</Button>\n      </div>\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof EdfViewer\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    edfListInfo: state.edfListInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof EdfViewer\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  updateEdf: (info) => (\n    dispatch(actions.updateEdf(info))\n  ),\n  clearEdfInfo: () => (\n    dispatch(actions.clearEdfInfo())\n  ),\n  createAndAssignEdf: (info) => (\n    dispatch(actions.createAndAssignEdf(info))\n  ),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EdfViewer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nimport { Button } from \"@blueprintjs/core\";\n\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleEdit = this.handleToggleEdit.bind(this);\n    this.changeFocusedItem = this.changeFocusedItem.bind(this);\n    this.state = {\n      editMode: false,\n    }\n  }\n  handleToggleEdit(e){\n    e.preventDefault();\n    const title = this.refs.title.textContent;\n    const questionTitle = this.refs.questionTitle.textContent;\n    if (this.state.editMode){\n      if (this.props.id){\n        this.props.updateItem({edfId: this.props.edfId, id: this.props.id, title: title, questionTitle: questionTitle})\n      }\n      else{\n        // this would need the edf id\n        //this.props.createItem({title: title, questionTitle: questionTitle});\n        alert(\"create\", title, questionTitle)\n      }\n    }\n    this.setState((state) => ({editMode: !state.editMode}))\n  }\n  changeFocusedItem(e){\n    e.preventDefault();\n    if (this.props.view.focusedItem === this.props.id){\n      this.props.changeFocusedItem(\"\")\n    }\n    else{\n      this.props.changeFocusedItem(this.props.id)\n    }\n  }\n\n  render() {\n\n    const displaySurfaces = () => {\n      // not quite working, only the first span shows up until Assign folios is retoggled and only then do the rest of the folios show up.\n      if (this.props.surfaces){\n        const surfaces = this.props.surfaces.map((s) => {\n          return(\n            <span key={s.surfaceId}>{s.witnessId} : {s.surfaceId}</span>\n          )\n        })\n        return surfaces\n      }\n    }\n    return (\n      <div className={this.props.status}>\n        <p>{this.props.id}</p>\n        <p contentEditable={this.state.editMode} ref=\"title\">{this.props.title}</p>\n        <p contentEditable={this.state.editMode} ref=\"questionTitle\">{this.props.questionTitle}</p>\n        {displaySurfaces()}\n        <Button onClick={this.handleToggleEdit} active={this.state.editMode}>Toggle Edit</Button>\n        <Button onClick={this.changeFocusedItem}>Assign Folios</Button>\n      </div>\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof Item\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof Item\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  updateItem: (info) => (\n    dispatch(actions.updateItem(info))\n  ),\n  changeFocusedItem: (id) => (\n    dispatch(actions.changeFocusedItem(id))\n  ),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Item);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store\";\n\nimport { Button, FormGroup, InputGroup} from \"@blueprintjs/core\";\n\nclass ItemCreation extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddNewItem = this.handleAddNewItem.bind(this);\n  }\n  componentDidMount() { }\n\n  handleAddNewItem(e) {\n    e.preventDefault();\n    const title = this.refs.form.title.value;\n    const questionTitle = this.refs.form.questionTitle.value;\n    if (!this.props.edfInfo.id){\n      alert(\"focused edf is not set\")\n    }\n    else{\n    this.props.createItem(this.props.edfInfo.id, {title: title, questionTitle: questionTitle});\n    //clears form after submission; not sure this is the correct react way to do this.\n    this.refs.form.title.value = \"\";\n    this.refs.form.questionTitle.value = \"\";\n    }\n\n  }\n  render() {\n    return (\n      <div className=\"data-creation-form\">\n        <h3>Add New Item</h3>\n        {\n        //<form ref=\"form\" onSubmit={this.handleAddNewItem}>\n\n            // <label>Title</label>\n          // <input\n          //   type=\"text\"\n          //   name=\"title\"\n          // />\n          // <label>Quesiton Title</label>\n          // <input\n          //   type=\"text\"\n          //   name=\"questionTitle\"\n          // />\n          }\n          <form onSubmit={this.handleAddNewItem} ref=\"form\">\n            <FormGroup  label=\"Title\" labelFor=\"title\">\n              <InputGroup\n                  id=\"title\"\n                  placeholder=\"title\"\n              />\n              </FormGroup>\n              <FormGroup  label=\"Question Title\" labelFor=\"questionTitle\">\n                <InputGroup\n                    id=\"questionTitle\"\n                    placeholder=\"question title\"\n                />\n                </FormGroup>\n          <Button type=\"submit\">Submit</Button>\n\n\n        </form>\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof ItemCreation\n * @private\n */\nconst mapStateToProps = state => ({\n  edfInfo: state.edfInfo,\n  personsInfo: state.personsInfo,\n  personInfo: state.personInfo,\n  witnessInfo: state.witnessInfo,\n  witnessesInfo: state.witnessesInfo,\n  view: state.view\n});\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof ItemCreation\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  createItem: (edfId, info) =>\n    dispatch(actions.createItem(edfId, info))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemCreation);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Item from './Item';\nimport ItemCreation from './ItemCreation';\n\n\n\nclass ItemsViewer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const displayItems = (targetEdf, edfList) => {\n      const edf = edfList.find((edf) => edf.id === targetEdf.id)\n      let questionTitles = []\n      if (edf){\n        if (edf.items){\n           questionTitles = edf.items.map((item) => {\n             const surfaces = item.surfaces ? item.surfaces : undefined\n             console.log(\"surfaces from items viewer\", surfaces)\n             const title = item.proposedChange ? item.proposedChange.title : item.title\n             let questionTitle = item.proposedChange ? item.proposedChange.questionTitle : item.questionTitle\n             const status = item.proposedChange ? \"provisional\" : \"SCTA\"\n             const id = item.id;\n             return (\n              <Item title={title} questionTitle={questionTitle} edfId={targetEdf.id} id={id} key={id} status={status} surfaces={surfaces}/>\n            )\n          });\n        }\n      }\n      return questionTitles\n    }\n\n    return (\n      <div>\n        <h3>Items</h3>\n        {displayItems(this.props.edfInfo, this.props.edfListInfo)}\n        <ItemCreation/>\n      </div>\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof ItemsViewer\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    edfListInfo: state.edfListInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    witnessInfo: state.witnessInfo,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof ItemsViewer\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemsViewer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\n\nimport { Button } from \"@blueprintjs/core\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnMouseOver = this.handleOnMouseOver.bind(this)\n    this.handleOnMouseOut = this.handleOnMouseOut.bind(this)\n    this.handleItemAssociation = this.handleItemAssociation.bind(this)\n    this.handleNext = this.handleNext.bind(this)\n    this.handlePrevoius = this.handlePrevious.bind(this)\n    this.state = {\n      width: \"1000\"\n    }\n  }\n  handleOnMouseOver(){\n    this.setState(() => ({width: \"1000\"}))\n  }\n  handleOnMouseOut(){\n    this.setState(() => ({width: \"1000\"}))\n  }\n  handleItemAssociation(){\n    const surfaceId = this.props.canvas[\"@id\"]\n    const witnessId = this.props.view.focusedWitness;\n    const itemId = this.props.view.focusedItem;\n    const edfId = this.props.edfInfo.id;\n\n    this.props.associateSurface(surfaceId, witnessId, itemId, edfId);\n  }\n  handleNext(){\n    this.props.selectCanvas(this.props.canvasNext[\"@id\"]);\n  }\n  handlePrevious(){\n    this.props.selectCanvas(this.props.canvasPrevious[\"@id\"]);\n  }\n\n  render() {\n    const displayImage = () => {\n        return (\n          <div onMouseOver={this.handleOnMouseOver} onMouseOut={this.handleOnMouseOut} >\n            <div>\n              <span>{this.props.canvas.label}</span>\n              {this.props.view.focusedItem && <Button onClick={this.handleItemAssociation}>Add</Button>}\n              {this.props.canvasNext && <Button onClick={this.handleNext}>Next</Button>}\n              {this.props.canvasPrevious && <Button onClick={this.handlePrevious}>Previous</Button>}\n            </div>\n            <img src={this.props.canvas.images[0].resource.service[\"@id\"] + \"/full/\" + this.state.width + \",/0/default.jpg\"}/>\n          </div>)\n      }\n    return (\n      displayImage()\n    )\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof Canvas\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    edfListInfo: state.edfListInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    manifest: state.manifest,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof Canvas\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  associateSurface: (surfaceId, witnessId, itemId, edfId) => (\n    dispatch(actions.associateSurface(surfaceId, witnessId, itemId, edfId))\n  ),\n  selectCanvas: (canvasid) => (\n    dispatch(actions.selectCanvas(canvasid))\n  )\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Canvas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../store';\nimport Canvas from './Canvas.js';\n\nclass Manifest extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    function displayCanvases(manifestid, manifests, view) {\n      const manifest = manifests[manifestid];\n      const canvasid = view.canvasid\n      if (manifest){\n        if (canvasid){\n          const canvas = manifest.sequences[0].canvases.find((canvas) => {\n            if (canvas[\"@id\"] === canvasid){\n              return canvas\n            }\n          })\n          const canvasIndex = manifest.sequences[0].canvases.findIndex((canvas, index) => {\n            if (canvas[\"@id\"] === canvasid){\n              return index\n            }\n          })\n          let canvasNext = \"\"\n          let canvasPrevious = \"\"\n\n          if (canvasIndex != manifest.sequences[0].canvases.length - 1){\n            canvasNext = manifest.sequences[0].canvases[canvasIndex + 1]\n          }\n          else {\n            canvasNext = undefined\n          }\n          if (canvasIndex != 0){\n            canvasPrevious = manifest.sequences[0].canvases[canvasIndex - 1]\n          }\n          else {\n            canvasPrevious = undefined\n          }\n          return <Canvas canvas={canvas} canvasNext={canvasNext} canvasPrevious={canvasPrevious}/>\n        }\n        else {\n          const canvas = manifest.sequences[0].canvases[0]\n          const canvasNext = manifest.sequences[0].canvases[1]\n          const canvasPrevious = undefined\n          return <Canvas canvas={canvas} canvasNext={canvasNext} canvasPrevious={canvasPrevious}/>\n        }\n        // const canvases = manifest.sequences[0].canvases.map((canvas, i) => {\n        //   if (canvase[\"@id\"] === canvasid){\n        //     return (\n        //       <Canvas canvas={canvas}/>\n        //     )\n        //   }\n        //   else if (i === 0) {\n        //     if {\n        //       return (\n        //         <Canvas canvas={canvas}\n        //       )\n        //   }\n        //   });\n        // return canvases\n\n      }\n      else{\n        return null\n      }\n    }\n    function getFocusedWitness(witnesses, focusedWitnessId){\n      if (focusedWitnessId){\n        const witness = witnesses.find((wit) => wit.id === focusedWitnessId)\n        try {\n          return witness.manifest\n        }\n        catch{\n          return null\n        }\n      }\n      else {\n        return null\n      }\n    }\n    return (\n      displayCanvases(getFocusedWitness(this.props.witnessesInfo, this.props.view.focusedWitness), this.props.manifests, this.props.view)\n    );\n  }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof Manifest\n * @private\n */\nconst mapStateToProps = state => (\n  {\n    edfInfo: state.edfInfo,\n    edfListInfo: state.edfListInfo,\n    personsInfo: state.personsInfo,\n    personInfo: state.personInfo,\n    manifests: state.manifests,\n    witnessesInfo: state.witnessesInfo,\n    view: state.view\n  }\n);\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof Manifest\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Manifest);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n//import logo from \"./logo.svg\";\n//import EdfCreation from \"./EdfCreation.js\";\n//import DataViewer from \"./DataViewer.js\";\n//import PersonCreation from \"./PersonCreation.js\";\n//import WitnessesCreation from \"./WitnessesCreation.js\";\nimport NavBar from \"./NavBar.js\";\nimport PersonsListViewer from \"./PersonsListViewer.js\";\nimport WitnessesListViewer from \"./WitnessesListViewer.js\";\nimport EdfListViewer from './EdfListViewer.js';\nimport WitnessesView from './WitnessesView.js';\nimport PersonViewer from './PersonViewer.js';\nimport EdfViewer from './EdfViewer.js';\nimport ItemsViewer from './ItemsViewer.js';\nimport Manifest from './Manifest';\n\nimport { Mosaic, MosaicWindow } from 'react-mosaic-component';\n\nimport 'react-mosaic-component/react-mosaic-component.css';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\nimport '../styles/Mosaic.css';\n\n\nimport Axios from \"axios\";\nimport { actions } from \"../store\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.tileRenderer = this.tileRenderer.bind(this);\n  }\n  componentDidMount() { }\n  /**\n   * Render a tile (Window) in the Mosaic.\n   */\n   tileRenderer(id, path) {\n     const titles = {\n       a: \"text list\",\n       b: \"codex list\",\n       c: \"person list\",\n       d: \"focused text\",\n       e: \"assigned author\",\n       f: \"assigned witnesses\",\n       g: \"assigned items\",\n       h: \"folios\"\n     }\n     const elements = {\n       a: <EdfListViewer/>,\n       b: <WitnessesListViewer/>,\n       c: <PersonsListViewer/>,\n       d: <div><EdfViewer/><PersonViewer/><WitnessesView /></div>,\n       g: <ItemsViewer />,\n       h: <Manifest />\n     }\n     const ViewIdMosaicWindow = MosaicWindow.ofType(id)\n     return (\n       <ViewIdMosaicWindow path={path} title={titles[id]}>\n          {elements[id]}\n       </ViewIdMosaicWindow>\n      )\n   }\n   render(){\n    const initialLayoutValue = {\n      direction: 'row',\n      first: {\n        direction: 'row',\n        first: \"a\",\n        second: {\n          direction: 'row',\n            first: 'b',\n            second: 'c',\n          },\n          splitPercentage: 33\n        },\n        second: {\n        direction: 'row',\n        first: \"d\",\n        second: {\n          direction: 'column',\n          first: 'g',\n          second: 'h',\n        },\n        splitPercentage: 50\n      },\n      splitPercentage: 50,\n      currentTheme: 'mosaic-blueprint-theme'\n    }\n    return(\n      <div>\n        <header className=\"App-header\">\n          <p>Data Creation App</p>\n        </header>\n        <NavBar />\n        <div id=\"app\">\n          <Mosaic\n            renderTile={this.tileRenderer}\n            initialValue={initialLayoutValue}\n            zeroStateView={<div />}\n          />\n        </div>\n        </div>\n\n    )\n  }\n\n  // render() {\n  //\n  //   return (\n  //     <div className=\"App\">\n  //       <header className=\"App-header\">\n  //         <p>Data Creation App Test</p>\n  //       </header>\n  //       <NavBar />\n  //       <div className=\"body-wrapper\">\n  //         <div className=\"data-lists column\">\n  //           <PersonsListViewer />\n  //           <WitnessesListViewer />\n  //           <EdfListViewer />\n  //         </div>\n  //         <div className=\"column\">\n  //             <EdfViewer/>\n  //             <PersonViewer/>\n  //             <WitnessesView />\n  //         </div>\n  //         <div className=\"column\">\n  //           <ItemsViewer />\n  //         </div>\n  //         <div className=\"column\">\n  //           <Manifest />\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n}\n\n/**\n * mapStateToProps - to hook up connect\n * @memberof App\n * @private\n */\nconst mapStateToProps = state => ({\n  edfInfo: state.edfInfo,\n  personsInfo: state.personsInfo,\n  view: state.view\n});\n\n/**\n * mapDispatchToProps - used to hook up connect to action creators\n * @memberof App\n * @private\n */\nconst mapDispatchToProps = dispatch => ({\n  fetchPersons: () => dispatch(actions.fetchPersons())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport './styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { store, actions } from './store';\n\n//get author list\nstore.dispatch(actions.fetchPersons());\nstore.dispatch(actions.fetchEdfList());\nstore.dispatch(actions.fetchWitnesses());\n\nstore.subscribe(() => {\n  localStorage.setItem(\"data-creation-state\", JSON.stringify(store.getState()))\n})\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}